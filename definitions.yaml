registerFormData:
  type: object
  required:
    - userId
  properties:
    userId:
      $ref: '#/userId'
    customField:
      type: string
      description: |
        Помимо `userId` могут передаваться и другие поля, значения которых пользователь указывает в интерфейсе [магазина приложений](https://market.evotor.ru/) при регистрации учётной записи в стороннем сервисе. Создавайте необходимые дополнительные поля в разделе **Интеграция**, на [сайте разработчиков](https://dev.evotor.ru).

        Облако Эвотор передаёт дополнительные поля в сторонний сервис во время [авторизации](https://api.evotor.ru/docs/#tag/Vebhuki-zaprosy%2Fpaths%2F~1partner.ru~1api~1v1~1user~1verify%2Fpost) или [регистрации](https://api.evotor.ru/docs/#tag/Vebhuki-zaprosy%2Fpaths%2F~1partner.ru~1api~1v1~1user~1create%2Fpost) пользователя.

        Не добавляйте поля для данных, которые пользователь может указать в Личном кабинете, после установки приложения.

      example: Дополнительные данные о пользователе


authorizeFormData:
  type: object
  required:
    - userId
  properties:
    userId:
      $ref: '#/userId'
    username:
      type: string
      description: Имя пользователя в стороннем сервисе.
      example: И.Иванов
    password:
      type: string
      description: Пароль пользователя в стороннем сервисе.
      example: superpassword
    customField:
      $ref: '#/registerFormData/properties/customField'


trialStarted:
  type: object
  properties:
    type:
      type: string
      description: |
          Тип события: `trialStarted`.
      default: trialStarted
    date:
      type: string
      format: date-time
      description: Дата и время активации пробного периода.
    data:
      type: object
      properties:
        trialDuration:
          type: number
          description: Длительность пробного периода.
          default: 30
        trialPeriodMeasure:
          type: string
          description: Единица измерения длительности пробного периода.
          enum:
            - day
            - month
            - year
          default: day
        userId:
          $ref: '#/userId'
        tariffId:
          type: string
          description: Код тарифа, для которого активирован пробный период.
          pattern: '^[a-zA-Z0-9\_\-]+$'
          example: starter


SubscriptionCreated:
  description: Подписка создана.
  allOf:
    - $ref: '#/subscriptionevents'
    - type: object
    - required:
        - planId
        - trialPeriodDuration
      properties:
        planId:
          allOf:
            - $ref: '#/planId'
        trialPeriodDuration:
          type: string
          description: |
              Строка вида `PnDT`, где n – количество дней бесплатного периода, доступных пользователю в момент активации тарифа.

              PnDT – [формат представления времени](https://en.wikipedia.org/wiki/ISO_8601#Durations).
          example: P14DT
        deviceNumber:
          allOf:
          - $ref: '#/deviceNumber'


SubscriptionActivated:
  description: Подписка активирована.
  allOf:
    - $ref: '#/subscriptionevents'
    - type: object
    - required:
        - nextBillingDate
      properties:
        nextBillingDate:
          allOf:
          - $ref: '#/nextBillingDate'
        chargedSum:
          allOf:
            - $ref: '#/chargedSum'


SubscriptionRenewed:
  description: Подписка продлена.
  allOf:
    - $ref: '#/subscriptionevents'
    - type: object
    - required:
        - nextBillingDate
      properties:
        nextBillingDate:
          allOf:
          - $ref: '#/nextBillingDate'
        chargedSum:
          allOf:
            - $ref: '#/chargedSum'


SubscriptionTerminated:
  description: Подписка завершена. Приходит, если не прошла регулярная оплата, независимо от того запросил пользователь завершение подписки или нет.
  allOf:
    - $ref: '#/subscriptionevents'
    - type: object

SubscriptionTerminationRequested:
  description: Пользователь отправил запрос на завершение подписки (удалил приложение из Личного кабинета). Пользователь может возобновить подписку до окончания оплаченного периода.
  allOf:
    - $ref: '#/subscriptionevents'
    - type: object


SubscriptionTermsChanged:
  description: Условия подписки изменились. Поля `planId`, `deviceNumber`, `nextBillingDate` и `chargedSum` приходят только в том случае, если при изменении подписки произошли изменения соответствующего параметра.
  allOf:
    - $ref: '#/subscriptionevents'
    - type: object
      properties:
          planId:
            allOf:
            - $ref: '#/planId'
          deviceNumber:
            allOf:
            - $ref: '#/deviceNumber'
          nextBillingDate:
            allOf:
            - $ref: '#/nextBillingDate'
          chargedSum:
            allOf:
              - $ref: '#/chargedSum'


product:
  type: object
  required:
    - group
    - name
    - uuid
    - type
  discriminator: type
  properties:
    uuid:
      type: string
      description: |
        Идентификатор товара или группы товаров, уникальный в рамках магазина.

        При обмене данными с Облаком, убедитесь, что в рамках одной синхронизации товар передаётся единожды. В противном случае, Облако не сохранит данные товара.

        Формат – `uuid4`.

        Не может быть `null` или пустой строкой.
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      example: 01ba18b6-8707-5f47-3d9c-4db058054cb2
    name:
      type: string
      description: |
        Название товара или группы товаров.

        Не может быть `null` или пустой строкой.
      minLength: 1
      maxLength: 100
      example: Сидр
    group:
      type: boolean
      description: |
        Указывает является элемент товаром или группой товаров:
          * `true` – группа товаров;
          * `false` – товар.

        Не может быть `null`.
      example: false
    parentUuid:
      type: string
      x-nullable: true
      pattern: |
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      description: |
        Уникальный идентификатор группы, к которой принадлежит товар или группа товаров.

        >Группу товаров можно вложить в другую группу.

        Если вы укажете идентификатор несуществующей группы, смарт-терминал не будет отображать товар.

        Формат – `uuid4`.

        Если товар или группа находится в корне иерархии – может быть `null`.

        Не может быть пустой строкой.
      example: 1ddea16b-971b-dee5-3798-1b29a7aa2e27
    hasVariants:
      type: boolean
      description: |
        Определяет являет группа хранилищем для модификаций или нет.

        > **Поле передаётся только если `group = true`**.
      example: false
    type:
      type: string
      description: |
        Тип товара:
          * `NORMAL` – обычный;
          * `ALCOHOL_MARKED` – маркированный алкоголь;
          * `ALCOHOL_NOT_MARKED` – немаркированный алкоголь;
          * `SERVICE` – услуга (доступен на терминалах начиная с прошивки 3.0).

        > **Поле передаётся только если `group = false`.**

        Не может быть `null`.
      enum:
        - NORMAL
        - ALCOHOL_MARKED
        - ALCOHOL_NOT_MARKED
        - SERVICE
      example: ALCOHOL_NOT_MARKED


NORMAL:
  allOf:
    - $ref: '#/product'
    - type: object
      required:
        - allowToSell
        - group
        - measureName
        - name
        - price
        - quantity
        - tax
        - type
        - uuid
      properties:
        quantity:
          $ref: '#/fieldQuantity'
        measureName:
          $ref: '#/fieldMeasureName'
        tax:
          $ref: '#/fieldTax'
        price:
          $ref: '#/fieldPrice'
        allowToSell:
          $ref: '#/fieldAllowToSell'
        costPrice:
          $ref: '#/fieldCostPrice'
        description:
          $ref: '#/fieldDescription'
        articleNumber:
          $ref: '#/fieldArticleNumber'
        code:
          $ref: '#/fieldCode'
        barCodes:
          $ref: '#/fieldBarCodes'
        attributes:
          $ref: '#/fieldAttributes'


ALCOHOL_NOT_MARKED:
  allOf:
    - $ref: '#/product'
    - type: object
      required:
        - alcoholByVolume
        - alcoholProductKindCode
        - allowToSell
        - barCodes
        - code
        - description
        - measureName
        - parentUuid
        - price
        - quantity
        - tareVolume
        - tax
      properties:
        alcoholByVolume:
          $ref: '#/fieldAlcoholByVolume'
        alcoholProductKindCode:
          $ref: '#/fieldAlcoholProductKindCode'
        tareVolume:
          $ref: '#/fieldTareVolume'
        quantity:
          $ref: '#/fieldQuantity'
        measureName:
          $ref: '#/fieldMeasureName'
        tax:
          $ref: '#/fieldTax'
        price:
          $ref: '#/fieldPrice'
        allowToSell:
          $ref: '#/fieldAllowToSell'
        alcoCodes:
          $ref: '#/fieldAlcoCodes'
        costPrice:
          $ref: '#/fieldCostPrice'
        description:
          $ref: '#/fieldDescription'
        articleNumber:
          $ref: '#/fieldArticleNumber'
        code:
          $ref: '#/fieldCode'
        barCodes:
          $ref: '#/fieldBarCodes'
        attributes:
          $ref: '#/fieldAttributes'

ALCOHOL_MARKED:
  allOf:
    - $ref: '#/product'
    - type: object
      required:
        - alcoCodes
        - alcoholByVolume
        - alcoholProductKindCode
        - allowToSell
        - measureName
        - parentUuid
        - price
        - quantity
        - tareVolume
        - tax
      properties:
        alcoholByVolume:
          $ref: '#/fieldAlcoholByVolume'
        alcoholProductKindCode:
          $ref: '#/fieldAlcoholProductKindCode'
        tareVolume:
          $ref: '#/fieldTareVolume'
        quantity:
          $ref: '#/fieldQuantity'
        measureName:
          $ref: '#/fieldMeasureName'
        tax:
          $ref: '#/fieldTax'
        price:
          $ref: '#/fieldPrice'
        allowToSell:
          $ref: '#/fieldAllowToSell'
        alcoCodes:
          $ref: '#/fieldAlcoCodes'
        costPrice:
          $ref: '#/fieldCostPrice'
        description:
          $ref: '#/fieldDescription'
        articleNumber:
          $ref: '#/fieldArticleNumber'
        code:
          $ref: '#/fieldCode'
        barCodes:
          $ref: '#/fieldBarCodes'
        attributes:
          $ref: '#/fieldAttributes'

SERVICE:
  allOf:
    - $ref: '#/product'
    - type: object
      required:
        - measureName
        - price
        - tax
      properties:
        measureName:
          $ref: '#/fieldMeasureName'
        tax:
          $ref: '#/fieldTax'
        price:
          $ref: '#/fieldPrice'
        allowToSell:
          $ref: '#/fieldAllowToSell'
        description:
          $ref: '#/fieldDescription'
        articleNumber:
          $ref: '#/fieldArticleNumber'
        code:
          $ref: '#/fieldCode'
        barCodes:
          $ref: '#/fieldBarCodes'
        attributes:
          $ref: '#/fieldAttributes'


productSchema:
  type: object
  required:
      - uuid
      - appId
      - items
  properties:
    uuid:
      type: string
      description: |
        Идентификатор схемы в магазине

        Формат – `uuid4`.

        Не может быть `null` или пустой строкой.
      pattern: |
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    appId:
      type: string
      description: |
        Идентификатор приложения в Облаке Эвотор.

        Формат – `uuid4`.

        Не может быть `null` или пустой строкой.
      pattern: |
          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    items:
      type: array
      description: Массив полей схемы.
      items:
        $ref: '#/items'

items:
  type: object
  discriminator: type
  properties:
    title:
      type: string
      description: Имя поля.
    editable:
      type: boolean
      description: Указывает можно редактировать поле или нет.
      example: false
    uuid:
      type: string
      description: |
        Идентификатор поля.

        Формат – `uuid4`.
    type:
      type: string
      description: |
          Определяет набор данных, которые содержит дополнительное поле. Может принимать значения:
            * `TEXT_FIELD` – текстовое поле.
            * `DICTIONARY_FIELD` – словарь. Позволяет выбрать одно или несколько предустановленных значений.

TEXT_FIELD:
  allOf:
    - $ref: '#/items'
    - type: object
      properties:
        data:
          type: object
          description: |
             Содержит валидный JSON-объект с произвольными данными, доступными на терминале из JavaScript.
        regexp:
          type: string
          description: |
              Валидное регулярное выражение.
          example: '\\w+'

DICTIONARY_FIELD:
  allOf:
    - $ref: '#/items'
    - type: object
      properties:
        multiple:
          type: boolean
          description: |
              Указывает можно выбрать несколько элементов раскрывающегося списка или нет.
          example: false
        items:
          type: array
          desctiption: |
              Массив элементов раскрывающегося списка.
          items:
            type: object
            description: Набор элементов раскрывающегося списка.
            properties:
              title:
                type: string
                description: Название элемента списка.
              value:
                type: string
                description: |
                   Идентификатор элемента.

                   Формат – `uuid4`.

productExtras:
  type: array
  items:
    type: object
    properties:
      uuid:
        type: string
        description: |
          Идентификатор дополнительного поля.

          Формат – `uuid4`.

          Не может быть `null` или пустой строкой.
        pattern: >-
          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        example: 1eaca77f-7890-5078-a726-83c892348acd
      appId:
        type: string
        description: |
          Идентификатор приложения в Облаке Эвотор.

          Формат – `uuid4`.

          Не может быть `null` или пустой строкой.
        pattern: |
          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        example: 1eaca77f-1579-5078-a123-83c892348acd
      key:
        type: object
        properties:
          uuid:
            type: string
            description: |
              Идентификатор товара, связанного с дополнительным полем.

              Формат – `uuid4`.

              Не может быть `null` или пустой строкой.
            pattern: >-
              ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
            example: 1eaca77f-5263-5078-a123-83c892348acd
      scheme:
        type: object
        description: |
          Поля, необходимые для отображения дополнительного поля в соответствующем элементе управления смарт-терминала.

          Объект отсутствует, если смарт-терминал не отображает дополнительные поля.
        properties:
          value:
            type: string
            description: Значение, которое будет отображаться в элеменменте управления.
            example: Элемент управления
          fieldId:
            type: string
            description: |
              Идентификатор поля из схемы.

              Формат – `uuid4`.

              Не может быть `null` или пустой строкой.
            pattern: >-
              ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
            example: 1eaca77f-1579-5869-a123-83c892348acd
      data:
        type: object
        description: Валидный JSON-объект, который содержит данные, отображаемые с помощью JavaScript в интерфейсе смарт-терминала.


employee:
  type: object
  required:
    - uuid
    - role
    - name
    - stores
  properties:
    uuid:
      type: string
      description: |
        Уникальный идентификатор сотрудника в Облаке Эвотор.

        Формат – `uuid4`.

        Не может содержать пустую строку или принимать значение `null`.
      pattern: >-
        ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89aAbB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
      example: 20170222-5670-4067-8017-FF5F40F1A23E
    name:
      type: string
      description: |
        Имя сотрудника, которое пользователь указал в Личном кабинете.

        Не может содержать пустую строку или принимать значение `null`.
      example: Иван
    lastName:
      type: string
      x-nullable: true
      description: |
        Фамилия сотрудника, которую пользователь указал в Личном кабинете.

        Может быть `null`.
      example: Иванов
    patronymicName:
      type: string
      x-nullable: true
      description: |
        Отчество сотрудника, которое пользователь указал в Личном кабинете.

        Может быть `null`.
      example: "null"
    phone:
      type: number
      nullable: true
      description: |
        Номер телефона сотрудника в платформе Эвотор.

        Может быть `null`.
      pattern: '^7[0-9]{10}$'
      example: 79876543210
    code:
      $ref: '#/store/properties/code'
    stores:
      type: array
      description: Массив идентификаторов магазинов, которым соответствует идентификатор сотрудника. В Личном кабинете, пользователь выбирает магазины, где работает сотрудник.
      items:
        type: object
        properties:
          storeUuid:
            $ref: '#/store/properties/uuid'
    role:
      type: string
      description: |
        Роль, которая задаёт права доступа сотрудника. Роль сотрудника выбирает пользователь в Личном кабинете.

        В зависимости от прав, сотрудники имеют доступ к различным функциям смарт-терминала:
          * ADMIN – предустановленная роль администратора с полным доступом к функциям смарт-терминала.
          * CASHIER – предустановленнная роль кассира с ограниченным доступом к функциям смарт-терминала.
          * MANUAL – роль, которую пользователь создал вручную.
      enum:
        - ADMIN
        - CASHIER
        - MANUAL


store:
  type: object
  required:
    - uuid
    - name
  properties:
    uuid:
      type: string
      description: |
        Уникальный идентификатор магазина в Облаке Эвотор.

        Формат – `uuid4`.

        Не может содержать пустую строку или принимать значение `null`.
      example: 20170228-F4F1-401B-80FA-9ECCA8451FFB
      pattern: >-
        ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89aAbB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
    address:
      type: string
      x-nullable: true
      description: |
        Адрес магазина, который пользователь указал в Личном кабинете.

        Может быть `null`.
      example: Россия, Москва, Старопанский переулок
    name:
      type: string
      description: |
         Имя магазина, которое пользователь указал в Личном кабинете.

         Не может содержать пустую строку или принимать значение `null`.
      example: Мой магазин
    code:
      type: string
      x-nullable: true
      description: |
         Облако Эвотор не использует это поле. Поле необходимо для сопоставления сущностей, если сторонняя система не работает с идентификаторами.

         Может быть `null`.
      example: "null"


document:
  type: object
  required:
    - uuid
    - types
  properties:
    uuid:
      type: string
      description: |
        Идентификатор документа в Облаке Эвотор, уникальный в рамках магазина `storeUuid`.

        Формат – `uuid4`.
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      example: 20170222-d58c-40e0-8051-b53adff38860
    types:
      type: string
      description: Тип документа.
      enum:
        - SELL
        - PAYBACK
        - CASH_INCOME
        - CASH_OUTCOME
        - OPEN_SESSION
        - FPRINT
        - CLOSE_SESSION
        - INVENTORY
        - ACCEPT
        - RETURN
        - WRITE_OFF
        - REVALUATION
        - OPEN_TARE
    transactions:
      type: array
      items:
        $ref: '#/transaction'


transaction:
  type: object
  properties:
    type:
      type: string
      description: Транзакция.
      enum:
        - DISCOUNT_DOCUMENT
        - DISCOUNT_POSITION
        - DISCOUNT_DOCUMENT_POSITION
        - DOCUMENT_OPEN
        - DOCUMENT_CLOSE
        - DOCUMENT_CLOSE_FPRINT
        - REGISTER_POSITION
        - REGISTER_BILLS
        - CASH_INCOME
        - CASH_OUTCOME
        - INVENTORY
        - PAYMENT
        - OPEN_SESSION
        - CLOSE_SESSION
        - FPRINT_OPEN_SESSION
        - FPRINT_X_REPORT
        - FPRINT_Z_REPORT
        - POSITION_TAX
        - REVALUATION


device:
  type: object
  properties:
    uuid:
      type: string
      description: |
        Уникальный идентификатор смарт-терминала в Облаке Эвотор.

        Формат – `uuid4`.
      pattern: >-
        ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89aAbB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
      example: 20170222-D58C-40E0-8051-B53ADFF38860
    code:
      $ref: '#/store/properties/code'
    name:
      type: string
      description: |
        Имя смарт-терминала, которое пользователь дал устройству в Личном кабинете.

        Не может содержать пустую строку или принимать значение `null`.
      example: Моя касса №3
    storeUuid:
      $ref: '#/store/properties/uuid'
    timezoneOffset:
      type: integer
      description: |
         Часовой пояс, в котором работает смарт-терминал.

         Не может быть `null`.
      example: 10800000


commodity:
  type: object
  properties:
    name:
      $ref: '#/product/properties/name'
    alcCodes:
      $ref: '#/fieldAlcoCodes'
    scanCodes:
      $ref: '#/fieldBarCodes'
    alcoholByVolume:
      $ref: '#/fieldAlcoholByVolume'
    alcoholProductKindCode:
      $ref: '#/fieldAlcoholProductKindCode'
    tareVolume:
      $ref: '#/fieldTareVolume'
    measure:
      $ref: '#/fieldMeasureName'


receipt:
  in: body
  description: Объект с данными о чеке.
  required: true
  schema:
    type: object
    properties:
      id:
        type: string
        description: Уникальный идентификатор события отправки чека.
      timestamp:
        type: number
        description: Время в миллисекундах, в Unix-формате.
        example: "1496826444000001"
      userId:
        $ref: '#/userId'
      type:
        type: string
        description: Тип события.
      version:
        type: enum
        description: Версия API.
        example: 2
      data:
        type: object
        properties:
          id:
            type: string
            description: |
              Идентификатор чека.

              Формат – `uuid4`.
            pattern:
          deviceId:
            type: string
            description: |
              Идентификатор устройства в Облаке Эвотор.

              Формат – `uuid4`. Регистрозависимый.
            pattern:
          storeId:
            type: string
            description: |
              Идентификатор магазина.

              Формат – `uuid4`.
            pattern:
          dateTime:
            type: number
            description: |
              Дата и время в формате создания чека.

              [В соответствовии с ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC)
            example: "2017-06-07T12:55:18Z"
          type:
            type: string
            description: Тип документа
          shiftId:
            type: string
            description: Номер смены.
          employeeId:
            type: string
            description: Уникальный идентификатор сотрудника (пользователя, продавшего товар).
            pattern:
          paymentSource:
            description: |
              Способ оплаты:
                * PAY_CASH - оплата наличными без сдачи;
                * PAY_CASHBACK – оплата наличными со сдачей;
                * PAY_CARD - оплата по карте.
            type: string
            enum:
              - PAY_CASH
              - PAY_CASHBACK
              - PAY_CARD
              - OTHER
          infoCheck:
            type: boolean
            description: |
              Флаг, указывающий на фискальность документа:
                * `true` – информационный чек;
                * `false` – фискальный чек.

          egais:
            type: boolean
            description: Указывает относится документ к ЕГАИС или нет.
          items:
            type: array
            description: Массив с позициями чека.
            items:
              type: object
              properties:
                id:
                  type: string
                  description: |
                    Идентификатор товара.

                    Формат – `uuid4`.
                name:
                  type: string
                  description: Название товара.
                itemType:
                  type: string
                  description: |
                    Тип товара:
                      * обычный;
                      * маркированный алкоголь;
                      * немаркированный алкоголь;
                      * услуга.
                  enum:
                    - NORMAL
                    - ALCOHOL_MARKED
                    - ALCOHOL_NOT_MARKED
                    - SERVICE
                measureName:
                  type: string
                  description: |
                    Единица измерения для товара.

                    >Товароучётные системы могут задавать свои единицы измерения, например, "пара", "палета", "карат" и т.д..

                    Для групп товаров указывается "".

                    Не может быть`null`
                  enum:
                    - ''
                    - шт
                    - кг
                    - л
                    - м
                    - км
                    - м2
                    - м3
                    - компл
                    - упак
                    - ед
                    - дроб
                quantity:
                  type: number
                  description: Количество товара.
                price:
                  type: number
                  description: Отпускная цена товара.
                costPrice:
                  type: number
                  description: Закупочная цена товара.
                sumPrice:
                  type: number
                  description: Общая цена товара.
                tax:
                  type: number
                  description: Сумма налога на товар.
                taxPercent:
                  type: number
                  description: Сумма налога на товар, выраженная в процентах.
                discount:
                  type: number
                  description: Общая сумма скидки на товар.
          totalTax:
            type: number
            description: Общая сумма налога.
          totalDiscount:
            type: number
            description: Общая сумма скидки.
          totalAmount:
            type: number
            description: Общая сумма чека.
          extras:
            type: object
            description: |
              Дополнительные поля. Например, поля пользователей программ лояльности.

              Поля хранятся в контексте приложения. При отправке в сторонний сервис, Облако Эвотор фильтрует поля таким образом, что сторонний сервис получает только те поля которые были созданы соответствующим приложением, установленным на терминале.


productToDelete:
  type: object
  properties:
    uuid:
      type: string
      description: |
        Уникальный UUID товара в платформе Эвотор.

        >Запрос с пустым массивом удаляет все товары в магазине.


subscriptionevents:
  type: object
  discriminator: type
  required:
    - subscriptionId
    - productId
    - userId
    - timestamp
    - sequenceNumber
    - type
  properties:
    subscriptionId:
      allOf:
        - $ref: '#/subscriptionId'
    productId:
      allOf:
        - $ref: '#/productId'
    userId:
      allOf:
        - $ref: '#/userId'
    timestamp:
      allOf:
        - $ref: '#/timestamp'
    sequenceNumber:
      allOf:
        - $ref: '#/sequenceNumber'
    type:
      description: |
        Типы событий:
          * `SubscriptionCreated` – новая подписка. Сообщает о том, что пользователь установил приложение в Личном кабинете. Приходит в начале пробного периода или перед сообщением об успешной оплате, если пробного периода нет.
          * `SubscriptionActivated` – подписка активирована. Сообщает об успешной оплате.
          * `SubscriptionRenewed` – подписка продлена на следующий период. Сообщает об успешной оплате очередного периода.
          * `SubscriptionTermsChanged` – изменились условия подписки, например, тарифный план или количество устройств.
          * `SubscriptionTerminationRequested` – Пользователь отправил запрос на завершение подписки (удалил приложение из Личного кабинета). Пользователь может возобновить подписку до окончания оплаченного периода.
          * `SubscriptionTerminated` – Подписка завершена. Приходит если не прошла регулярная оплата, независимо от того запросил пользователь завершение подписки или нет.
      type: string

appevents:
  type: object
  discriminator: type
  required:
    - id
    - timestamp
    - version
    - type
    - data
  properties:
    id:
      allOf:
        - $ref: '#/eventId'
    timestamp:
      type: string
      description: |
        Дата и время отправки события, в миллисекундах

        В формате unix timestamp.
      example: 1504168645290
    version:
      allOf:
        - $ref: '#/apiVersion'
    type:
      description: |
        Типы событий:
          * `ApplicationInstalled` – приложение активировано.
          * `ApplicationUninstalled` – приложение деактивировано.
      type: string

apiVersion:
  type: enum
  description: Версия API, к которой относятся события.
  default: 2


userId:
  type: string
  description: |
    Идентификатор пользователя в Облаке Эвотор.

    Не может быть `null`.
  pattern: '^[0-9]{2}-[0-9]{15}$'
  example: 01-000000000000001


timestamp:
  type: string
  format: date-time
  description: |
    Дата и время отправки события.

    [В соответствовии с ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC)
  example: 2017-04-20T18:26:37.753+0000

subscriptionId:
  type: string
  description: |
    Идентификатор подписки.

    Формат – `uuid4`.
  pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
  example: a99fbf70-6307-4acc-b61c-741ee9eef6c0


planId:
  type: string
  description: Идентификатор тарифа, который вы создаёте на портале разработчиков.
  example: example


deviceNumber:
  type: integer
  description:  Количество оплаченных устройств.
  example: 35


nextBillingDate:
  type: string
  format: date-time
  description: Дата следующего платежа.
  example: 2017-04-23T00:48:38.000+0000


chargedSum:
  type: object
  description: |
    Удержанная сумма. Поле не приходит, если после изменения подписки будет удерживаться меньшая сумма, а так же если изменение условий подписки произошло во время пробного периода.

    До двух знаков в дробной части.
  properties:
    amount:
      type: number
      description: Значение суммы.
      example: 2416.67
    currency:
      type: string
      description: Наименование валюты.
      example: RUB

productId:
  type: string
  description: |
    Идентификатор приложения.

    Формат – `uuid4`.
  pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
  example: c0d01x35-5193-4cc2-9bfb-be20e0679498

sequenceNumber:
  type: integer
  description: Номер события в последовательности. Номер непрерывно возрастает начиная с единицы. Необходим для соблюдения порядка обработки событий. Номер события уникален в рамках подписки (`subscriptionId`), таким образом, при переустановке приложения номерация событий начнётся сначала
  example: 4

measureName:
  type: string
  description: >-
    Единица измерения для товара, не может быть`null`. Товароучётные системы могут задавать свои единицы измерения, например, "пара", "палета", "карат" и т.д.. Для групп товаров указывается "";
  enum:
    - ''
    - шт
    - кг
    - л
    - м
    - км
    - м2
    - м3
    - компл
    - упак
    - ед
    - дроб

eventId:
  type: string
  description: |
    Идентификатор события.

    Формат – `uuid4`.
  pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
  example: a99fbf70-6307-4acc-b61c-741ee9eef6c0

ApplicationInstalled:
  description: Приложение активировано.
  allOf:
    - $ref: '#/appevents'
    - type: object
      properties:
        data:
          type: object
          required:
            - productId
            - userId
          properties:
            productId:
              allOf:
                - $ref: '#/productSchema/properties/appId'
            userId:
              allOf:
                - $ref: '#/userId'

ApplicationUninstalled:
  description: Приложение деактивировано.
  allOf:
    - $ref: '#/appevents'
    - type: object
      properties:
        data:
          type: object
          required:
            - productId
            - userId
          properties:
            productId:
              allOf:
                - $ref: '#/productSchema/properties/appId'
            userId:
              allOf:
                - $ref: '#/userId'




########
#FIELDS#
########

fieldQuantity:
  type: number
  format: float
  description: |
    Количество товара в наличии (остаток). До трёх знаков в дробной части.

    Не может быть `null`.

    >**Поле передаётся только если `group = false`.**
  example: 12
fieldMeasureName:
  type: string
  description: |
    Единица измерения товара.

    >Товароучётные системы могут задавать свои единицы измерения, например: "пара", "палета", "карат" и т.д..

    Не может быть`null`.

    >**Поле передаётся только если `group = false`.**
  enum:
    - ''
    - шт
    - кг
    - л
    - м
    - км
    - м2
    - м3
    - компл
    - упак
    - ед
    - дроб
  example: шт
fieldTax:
  type: string
  description: |
    Ставка НДС для товара.

    Не может быть `null` или пустой строкой.

    >**Поле передаётся только если `group = false`.**
  enum:
    - NO_VAT
    - VAT_10
    - VAT_18
    - VAT_0
    - VAT_18_118
    - VAT_10_110
  example: VAT_18
fieldPrice:
  type: number
  format: float
  minimum: 0
  maximum: 9999999.99
  description: |
    Отпускная цена товара.

    Не может быть `null`.

    >**Поле передаётся только если `group = false`.**
  example: 123.12
fieldAllowToSell:
  type: boolean
  description: |
    Указывает можно добавить товар в чек или нельзя:
      * `true` – товар можно добавить в чек;
      * `false` - товар нельзя добавить в чек.

      Не может быть `null`.

      >**Поле передаётся только если `group = false`.**
  example: true
fieldCostPrice:
  type: number
  format: float
  minimum: 0
  maximum: 9999999.99
  description: |
    Закупочная цена товара.

    Не может быть `null`.

    >**Поле передаётся только если `group = false`.**
  example: 100.123
fieldDescription:
  type: string
  x-nullable: true
  description: |
    Описание товара.

    >**Поле передаётся только если `group = false`.**
  example: Вкусный яблочный сидр.
  minLength: 0
fieldArticleNumber:
  type: string
  x-nullable: true
  description: |
    Артикул товара.

    >**Поле передаётся только если `group = false`.**
  minLength: 0
  maxLength: 20
  example: сид123
fieldCode:
  type: string
  description: |
    Код товара или группы товаров.

    >**Поле передаётся только если `group = false`.**
  minLength: 0
  maxLength: 10
  example: "6"
fieldBarCodes:
  type: array
  x-nullable: true
  description: |
    Массив штрихкодов товара.

    >**Поле передаётся только если `group = false`.**
  items:
    type: string
    pattern: '^[0-9]$'
    minLength: 1
    example: "2000000000060"
fieldAlcoholByVolume:
  type: number
  format: float
  x-nullable: true
  minimum: 0
  maximum: 99.999
  description: |
    Крепость алкогольной продукции. До трёх знаков в дробной части.

    Для алкогольных товаров значение может быть в диапазоне от
    0.001 до 99.999.

    >**Поле передаётся только если `group = false`.**
  example: 5.45
fieldAlcoholProductKindCode:
  type: integer
  x-nullable: true
  minimum: 0
  maximum: 999
  description: |
    Код вида алкогольной продукции ФСРАР.

    Для алкогольных товаров значение может быть в диапазоне от 1 до 999.

    >**Поле передаётся только если `group = false`.**
  example: 123
fieldTareVolume:
  type: number
  x-nullable: true
  format: float
  minimum: 0
  maximum: 999.999
  description: |
    Ёмкость тары алкогольной продукции в литрах. До трёх знаков после запятой.

    Для алкоголя значение может быть диапазоне от 0.001 до 999.999.

    >**Поле передаётся только если `group = false`.**
  example: 0.57
fieldAlcoCodes:
  type: array
  x-nullable: true
  description: |
    Массив строк кодов алкогольной продукции ЕГАИС.

    Если товар не относится к алкогольной продукции – пустой массив.

    >**Поле передаётся только если `group = false`.**
  items:
    type: string
    description: 19-ти значный код алкогольной продукции ЕГАИС.
    pattern: '^[0-9]{19}$'
    example: "0000000000000000001"
fieldAttributes:
  type: object
#  description: |
#    Содержит перечисление характеристик для модификации товара в пар ключ-значение.
#
#    Например: {"key1": "value1", "key2": "value2", ... "keyN": "valueN"}
